type: Pipeline
concurrency: -1
metrics:
  enabled: true
  requests:
    - id: "service_app_cpu_by_namespace_rate"
      type: "prometheus"
      url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
      query: 'sum by(namespace) (rate(container_cpu_usage_seconds_total{container!="POD",container!="",namespace!="kube-system", image=~"docker.io/ablankz/.*",  image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"}[3m]))'
      interval: 5s
      data:
        - key: "CPUUsage"
          jmesPath: "data.result[*].value[1] | [0]"
        - key: "AuthCPUUsage"
          jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
        - key: "WebsocketCPUUsage"
          jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
        - key: "WebGatewayCPUUsage"
          jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
        - key: "JobCPUUsage"
          jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
        - key: "UserProfileCPUUsage"
          jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
        - key: "UserPreferenceCPUUsage"
          jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
        - key: "OrganizationCPUUsage"
          jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
        - key: "TeamCPUUsage"
          jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
        - key: "PlanCPUUsage"
          jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
        - key: "StorageCPUUsage"
          jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    - id: "service_app_cpu_by_namespace"
      type: "prometheus"
      url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
      query: 'sum by(namespace) (container_cpu_usage_seconds_total{container!="POD",container!="",namespace!="kube-system", image=~"docker.io/ablankz/.*",  image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"})'
      interval: 5s
      data:
        - key: "CPUUsage"
          jmesPath: "data.result[*].value[1] | [0]"
        - key: "AuthCPUUsage"
          jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
        - key: "WebsocketCPUUsage"
          jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
        - key: "WebGatewayCPUUsage"
          jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
        - key: "JobCPUUsage"
          jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
        - key: "UserProfileCPUUsage"
          jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
        - key: "UserPreferenceCPUUsage"
          jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
        - key: "OrganizationCPUUsage"
          jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
        - key: "TeamCPUUsage"
          jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
        - key: "PlanCPUUsage"
          jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
        - key: "StorageCPUUsage"
          jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    - id: "memory_by_namespace_rate"
      type: "prometheus"
      url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
      query: 'sum by(namespace) (rate(container_memory_working_set_bytes{container!="POD",container!="",namespace!="kube-system", image=~"docker.io/ablankz/.*",  image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"}[3m]))'
      interval: 5s
      data:
        - key: "MemoryUsage"
          jmesPath: "data.result[*].value[1] | [0]"
        - key: "AuthMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
        - key: "WebsocketMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
        - key: "WebGatewayMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
        - key: "JobMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
        - key: "UserProfileMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
        - key: "UserPreferenceMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
        - key: "OrganizationMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
        - key: "TeamMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
        - key: "PlanMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
        - key: "StorageMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    - id: "memory_by_namespace"
      type: "prometheus"
      url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
      query: 'sum by(namespace) (container_memory_working_set_bytes{container!="POD",container!="",namespace!="kube-system", image=~"docker.io/ablankz/.*",  image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"})'
      interval: 5s
      data:
        - key: "MemoryUsage"
          jmesPath: "data.result[*].value[1] | [0]"
        - key: "AuthMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
        - key: "WebsocketMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
        - key: "WebGatewayMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
        - key: "JobMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
        - key: "UserProfileMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
        - key: "UserPreferenceMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
        - key: "OrganizationMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
        - key: "TeamMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
        - key: "PlanMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
        - key: "StorageMemoryUsage"
          jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    # - id: "postgres_cpu_by_namespace_rate"
    #   type: "prometheus"
    #   url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
    #   query: 'sum by(namespace) (rate(container_cpu_usage_seconds_total{container!="POD",container!="",namespace!="kube-system", image=~".*.dkr.ecr.ap-northeast-1.amazonaws.com/postgres:1.2.0", image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"}[3m]))'
    #   interval: 5s
    #   data:
    #     - key: "PostgresCPUUsage"
    #       jmesPath: "data.result[*].value[1] | [0]"
    #     - key: "AuthPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
    #     - key: "WebsocketPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
    #     - key: "WebGatewayPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
    #     - key: "JobPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
    #     - key: "UserProfilePostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
    #     - key: "UserPreferencePostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
    #     - key: "OrganizationPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
    #     - key: "TeamPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
    #     - key: "PlanPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
    #     - key: "StoragePostgresCPUUsage"  
    #       jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    # - id: "postgres_cpu_by_namespace"
    #   type: "prometheus"
    #   url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
    #   query: 'sum by(namespace) (container_cpu_usage_seconds_total{container!="POD",container!="",namespace!="kube-system", image=~".*.dkr.ecr.ap-northeast-1.amazonaws.com/postgres:1.2.0", image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"})'
    #   interval: 5s
    #   data:
    #     - key: "PostgresCPUUsage"
    #       jmesPath: "data.result[*].value[1] | [0]"
    #     - key: "AuthPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
    #     - key: "WebsocketPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
    #     - key: "WebGatewayPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
    #     - key: "JobPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
    #     - key: "UserProfilePostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
    #     - key: "UserPreferencePostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
    #     - key: "OrganizationPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
    #     - key: "TeamPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
    #     - key: "PlanPostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
    #     - key: "StoragePostgresCPUUsage"
    #       jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0}"
    # - id: "postgres_memory_by_namespace_rate"
    #   type: "prometheus"
    #   url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
    #   query: 'sum by(namespace) (rate(container_memory_working_set_bytes{container!="POD",container!="",namespace!="kube-system", image=~".*.dkr.ecr.ap-northeast-1.amazonaws.com/postgres:1.2.0", image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"}[3m]))'
    #   interval: 5s
    #   data:
    #     - key: "PostgresMemoryUsage"
    #       jmesPath: "data.result[*].value[1] | [0]"
    #     - key: "AuthPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
    #     - key: "WebsocketPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
    #     - key: "WebGatewayPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
    #     - key: "JobPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
    #     - key: "UserProfilePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
    #     - key: "UserPreferencePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
    #     - key: "OrganizationPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
    #     - key: "TeamPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
    #     - key: "PlanPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
    #     - key: "StoragePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    # - id: "postgres_memory_by_namespace"
    #   type: "prometheus"
    #   url: "https://prometheus.state.api.cresplanex.org/api/v1/query"
    #   query: 'sum by(namespace) (container_memory_working_set_bytes{container!="POD",container!="",namespace!="kube-system", image=~".*.dkr.ecr.ap-northeast-1.amazonaws.com/postgres:1.2.0", image!="docker.io/ablankz/debezium:1.0.0", job="kubelet"})'
    #   interval: 5s
    #   data:
    #     - key: "PostgresMemoryUsage"
    #       jmesPath: "data.result[*].value[1] | [0]"
    #     - key: "AuthPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='auth-service'].value[1] | [0]"
    #     - key: "WebsocketPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='websocket-service'].value[1] | [0]"
    #     - key: "WebGatewayPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='web-gateway'].value[1] | [0]"
    #     - key: "JobPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='job-service'].value[1] | [0]"
    #     - key: "UserProfilePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-profile-service'].value[1] | [0]"
    #     - key: "UserPreferencePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='user-preference-service'].value[1] | [0]"
    #     - key: "OrganizationPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='organization-service'].value[1] | [0]"
    #     - key: "TeamPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='team-service'].value[1] | [0]"
    #     - key: "PlanPostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='plan-service'].value[1] | [0]"
    #     - key: "StoragePostgresMemoryUsage"
    #       jmesPath: "data.result[?metric.namespace=='storage-service'].value[1] | [0]"
    
files:
  - id: "exec"
    file: "cmd/exec.yaml"
    threadOnlyValues:
      - key: "threadCount"
        value: "1"
      - key: "interval"
        value: "1s"
      - key: "timeout"
        value: "3m"